// Generated by view binder compiler. Do not edit!
package com.example.fieldagent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fieldagent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReimbursementScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText Amount;

  @NonNull
  public final EditText RecevingBill;

  @NonNull
  public final Button button;

  @NonNull
  public final EditText expenseNameEditText;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final EditText numberOfDaysEditText;

  @NonNull
  public final TextView siteVisitDate;

  private ActivityReimbursementScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText Amount, @NonNull EditText RecevingBill, @NonNull Button button,
      @NonNull EditText expenseNameEditText, @NonNull ImageView imageView2,
      @NonNull EditText numberOfDaysEditText, @NonNull TextView siteVisitDate) {
    this.rootView = rootView;
    this.Amount = Amount;
    this.RecevingBill = RecevingBill;
    this.button = button;
    this.expenseNameEditText = expenseNameEditText;
    this.imageView2 = imageView2;
    this.numberOfDaysEditText = numberOfDaysEditText;
    this.siteVisitDate = siteVisitDate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReimbursementScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReimbursementScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reimbursement_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReimbursementScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Amount;
      EditText Amount = ViewBindings.findChildViewById(rootView, id);
      if (Amount == null) {
        break missingId;
      }

      id = R.id.RecevingBill;
      EditText RecevingBill = ViewBindings.findChildViewById(rootView, id);
      if (RecevingBill == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.expenseNameEditText;
      EditText expenseNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (expenseNameEditText == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.numberOfDaysEditText;
      EditText numberOfDaysEditText = ViewBindings.findChildViewById(rootView, id);
      if (numberOfDaysEditText == null) {
        break missingId;
      }

      id = R.id.site_visit_Date;
      TextView siteVisitDate = ViewBindings.findChildViewById(rootView, id);
      if (siteVisitDate == null) {
        break missingId;
      }

      return new ActivityReimbursementScreenBinding((ConstraintLayout) rootView, Amount,
          RecevingBill, button, expenseNameEditText, imageView2, numberOfDaysEditText,
          siteVisitDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
