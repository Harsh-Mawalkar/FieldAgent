// Generated by view binder compiler. Do not edit!
package com.example.fieldagent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fieldagent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddClientBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText Address;

  @NonNull
  public final TextView Addressmatching;

  @NonNull
  public final EditText AgeOfProperty;

  @NonNull
  public final EditText Amenities;

  @NonNull
  public final EditText Anynegativetothelocality;

  @NonNull
  public final EditText Colony;

  @NonNull
  public final EditText ContactPersonName;

  @NonNull
  public final EditText ContactPersonNumber;

  @NonNull
  public final EditText East;

  @NonNull
  public final Spinner Jurisdiction;

  @NonNull
  public final TextView JurisdictionText;

  @NonNull
  public final EditText NearestBusStop;

  @NonNull
  public final EditText NearestHospital;

  @NonNull
  public final EditText NearestMetroStation;

  @NonNull
  public final EditText NearestRailwayStation;

  @NonNull
  public final EditText NeighborhoodType;

  @NonNull
  public final EditText North;

  @NonNull
  public final EditText OccupiedBy;

  @NonNull
  public final EditText OccupiedSince;

  @NonNull
  public final EditText Relationship;

  @NonNull
  public final TextView SiteAccesstext;

  @NonNull
  public final EditText South;

  @NonNull
  public final Spinner Statusofoccupancy;

  @NonNull
  public final EditText West;

  @NonNull
  public final Button button;

  @NonNull
  public final TextView cityLabel;

  @NonNull
  public final Spinner citySpinner;

  @NonNull
  public final EditText custLoantype;

  @NonNull
  public final EditText custName;

  @NonNull
  public final CardView group1CardView;

  @NonNull
  public final LinearLayout group1Layout;

  @NonNull
  public final CardView group2CardView;

  @NonNull
  public final LinearLayout group2Layout;

  @NonNull
  public final CardView group3CardView;

  @NonNull
  public final LinearLayout group3Layout;

  @NonNull
  public final CardView group4CardView;

  @NonNull
  public final LinearLayout group4Layout;

  @NonNull
  public final CardView group5CardView;

  @NonNull
  public final LinearLayout group5Layout;

  @NonNull
  public final CardView group6CardView;

  @NonNull
  public final LinearLayout group6Layout;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final EditText instituteName;

  @NonNull
  public final EditText jurisdictionEditText;

  @NonNull
  public final EditText landmark;

  @NonNull
  public final TextView levelOfMaintain;

  @NonNull
  public final Spinner levelofmaintain;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final EditText locality;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final Button prevButton;

  @NonNull
  public final EditText propertyAddressAsPerSite;

  @NonNull
  public final Spinner siteAccess;

  @NonNull
  public final TextView siteVisitDate;

  @NonNull
  public final TextView statusoccupancy;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final EditText widthofroad;

  @NonNull
  public final Spinner yesNoSpinner;

  private ActivityAddClientBinding(@NonNull ConstraintLayout rootView, @NonNull EditText Address,
      @NonNull TextView Addressmatching, @NonNull EditText AgeOfProperty,
      @NonNull EditText Amenities, @NonNull EditText Anynegativetothelocality,
      @NonNull EditText Colony, @NonNull EditText ContactPersonName,
      @NonNull EditText ContactPersonNumber, @NonNull EditText East, @NonNull Spinner Jurisdiction,
      @NonNull TextView JurisdictionText, @NonNull EditText NearestBusStop,
      @NonNull EditText NearestHospital, @NonNull EditText NearestMetroStation,
      @NonNull EditText NearestRailwayStation, @NonNull EditText NeighborhoodType,
      @NonNull EditText North, @NonNull EditText OccupiedBy, @NonNull EditText OccupiedSince,
      @NonNull EditText Relationship, @NonNull TextView SiteAccesstext, @NonNull EditText South,
      @NonNull Spinner Statusofoccupancy, @NonNull EditText West, @NonNull Button button,
      @NonNull TextView cityLabel, @NonNull Spinner citySpinner, @NonNull EditText custLoantype,
      @NonNull EditText custName, @NonNull CardView group1CardView,
      @NonNull LinearLayout group1Layout, @NonNull CardView group2CardView,
      @NonNull LinearLayout group2Layout, @NonNull CardView group3CardView,
      @NonNull LinearLayout group3Layout, @NonNull CardView group4CardView,
      @NonNull LinearLayout group4Layout, @NonNull CardView group5CardView,
      @NonNull LinearLayout group5Layout, @NonNull CardView group6CardView,
      @NonNull LinearLayout group6Layout, @NonNull ImageView imageView2,
      @NonNull EditText instituteName, @NonNull EditText jurisdictionEditText,
      @NonNull EditText landmark, @NonNull TextView levelOfMaintain,
      @NonNull Spinner levelofmaintain, @NonNull LinearLayout linearLayout2,
      @NonNull EditText locality, @NonNull Button nextButton, @NonNull Button prevButton,
      @NonNull EditText propertyAddressAsPerSite, @NonNull Spinner siteAccess,
      @NonNull TextView siteVisitDate, @NonNull TextView statusoccupancy,
      @NonNull Button submitButton, @NonNull TextView textView1, @NonNull TextView textView3,
      @NonNull TextView textView4, @NonNull TextView textView5, @NonNull TextView textView6,
      @NonNull TextView textview2, @NonNull EditText widthofroad, @NonNull Spinner yesNoSpinner) {
    this.rootView = rootView;
    this.Address = Address;
    this.Addressmatching = Addressmatching;
    this.AgeOfProperty = AgeOfProperty;
    this.Amenities = Amenities;
    this.Anynegativetothelocality = Anynegativetothelocality;
    this.Colony = Colony;
    this.ContactPersonName = ContactPersonName;
    this.ContactPersonNumber = ContactPersonNumber;
    this.East = East;
    this.Jurisdiction = Jurisdiction;
    this.JurisdictionText = JurisdictionText;
    this.NearestBusStop = NearestBusStop;
    this.NearestHospital = NearestHospital;
    this.NearestMetroStation = NearestMetroStation;
    this.NearestRailwayStation = NearestRailwayStation;
    this.NeighborhoodType = NeighborhoodType;
    this.North = North;
    this.OccupiedBy = OccupiedBy;
    this.OccupiedSince = OccupiedSince;
    this.Relationship = Relationship;
    this.SiteAccesstext = SiteAccesstext;
    this.South = South;
    this.Statusofoccupancy = Statusofoccupancy;
    this.West = West;
    this.button = button;
    this.cityLabel = cityLabel;
    this.citySpinner = citySpinner;
    this.custLoantype = custLoantype;
    this.custName = custName;
    this.group1CardView = group1CardView;
    this.group1Layout = group1Layout;
    this.group2CardView = group2CardView;
    this.group2Layout = group2Layout;
    this.group3CardView = group3CardView;
    this.group3Layout = group3Layout;
    this.group4CardView = group4CardView;
    this.group4Layout = group4Layout;
    this.group5CardView = group5CardView;
    this.group5Layout = group5Layout;
    this.group6CardView = group6CardView;
    this.group6Layout = group6Layout;
    this.imageView2 = imageView2;
    this.instituteName = instituteName;
    this.jurisdictionEditText = jurisdictionEditText;
    this.landmark = landmark;
    this.levelOfMaintain = levelOfMaintain;
    this.levelofmaintain = levelofmaintain;
    this.linearLayout2 = linearLayout2;
    this.locality = locality;
    this.nextButton = nextButton;
    this.prevButton = prevButton;
    this.propertyAddressAsPerSite = propertyAddressAsPerSite;
    this.siteAccess = siteAccess;
    this.siteVisitDate = siteVisitDate;
    this.statusoccupancy = statusoccupancy;
    this.submitButton = submitButton;
    this.textView1 = textView1;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView6 = textView6;
    this.textview2 = textview2;
    this.widthofroad = widthofroad;
    this.yesNoSpinner = yesNoSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddClientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddClientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_client, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddClientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Address;
      EditText Address = ViewBindings.findChildViewById(rootView, id);
      if (Address == null) {
        break missingId;
      }

      id = R.id.Addressmatching;
      TextView Addressmatching = ViewBindings.findChildViewById(rootView, id);
      if (Addressmatching == null) {
        break missingId;
      }

      id = R.id.Age_of_Property;
      EditText AgeOfProperty = ViewBindings.findChildViewById(rootView, id);
      if (AgeOfProperty == null) {
        break missingId;
      }

      id = R.id.Amenities;
      EditText Amenities = ViewBindings.findChildViewById(rootView, id);
      if (Amenities == null) {
        break missingId;
      }

      id = R.id.Anynegativetothelocality;
      EditText Anynegativetothelocality = ViewBindings.findChildViewById(rootView, id);
      if (Anynegativetothelocality == null) {
        break missingId;
      }

      id = R.id.Colony;
      EditText Colony = ViewBindings.findChildViewById(rootView, id);
      if (Colony == null) {
        break missingId;
      }

      id = R.id.Contact_person_name;
      EditText ContactPersonName = ViewBindings.findChildViewById(rootView, id);
      if (ContactPersonName == null) {
        break missingId;
      }

      id = R.id.Contact_person_Number;
      EditText ContactPersonNumber = ViewBindings.findChildViewById(rootView, id);
      if (ContactPersonNumber == null) {
        break missingId;
      }

      id = R.id.East;
      EditText East = ViewBindings.findChildViewById(rootView, id);
      if (East == null) {
        break missingId;
      }

      id = R.id.Jurisdiction;
      Spinner Jurisdiction = ViewBindings.findChildViewById(rootView, id);
      if (Jurisdiction == null) {
        break missingId;
      }

      id = R.id.Jurisdiction_text;
      TextView JurisdictionText = ViewBindings.findChildViewById(rootView, id);
      if (JurisdictionText == null) {
        break missingId;
      }

      id = R.id.NearestBusStop;
      EditText NearestBusStop = ViewBindings.findChildViewById(rootView, id);
      if (NearestBusStop == null) {
        break missingId;
      }

      id = R.id.NearestHospital;
      EditText NearestHospital = ViewBindings.findChildViewById(rootView, id);
      if (NearestHospital == null) {
        break missingId;
      }

      id = R.id.NearestMetroStation;
      EditText NearestMetroStation = ViewBindings.findChildViewById(rootView, id);
      if (NearestMetroStation == null) {
        break missingId;
      }

      id = R.id.NearestRailwayStation;
      EditText NearestRailwayStation = ViewBindings.findChildViewById(rootView, id);
      if (NearestRailwayStation == null) {
        break missingId;
      }

      id = R.id.NeighborhoodType;
      EditText NeighborhoodType = ViewBindings.findChildViewById(rootView, id);
      if (NeighborhoodType == null) {
        break missingId;
      }

      id = R.id.North;
      EditText North = ViewBindings.findChildViewById(rootView, id);
      if (North == null) {
        break missingId;
      }

      id = R.id.Occupied_by;
      EditText OccupiedBy = ViewBindings.findChildViewById(rootView, id);
      if (OccupiedBy == null) {
        break missingId;
      }

      id = R.id.OccupiedSince;
      EditText OccupiedSince = ViewBindings.findChildViewById(rootView, id);
      if (OccupiedSince == null) {
        break missingId;
      }

      id = R.id.Relationship;
      EditText Relationship = ViewBindings.findChildViewById(rootView, id);
      if (Relationship == null) {
        break missingId;
      }

      id = R.id.SiteAccesstext;
      TextView SiteAccesstext = ViewBindings.findChildViewById(rootView, id);
      if (SiteAccesstext == null) {
        break missingId;
      }

      id = R.id.South;
      EditText South = ViewBindings.findChildViewById(rootView, id);
      if (South == null) {
        break missingId;
      }

      id = R.id.Statusofoccupancy;
      Spinner Statusofoccupancy = ViewBindings.findChildViewById(rootView, id);
      if (Statusofoccupancy == null) {
        break missingId;
      }

      id = R.id.West;
      EditText West = ViewBindings.findChildViewById(rootView, id);
      if (West == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.city_label;
      TextView cityLabel = ViewBindings.findChildViewById(rootView, id);
      if (cityLabel == null) {
        break missingId;
      }

      id = R.id.city_spinner;
      Spinner citySpinner = ViewBindings.findChildViewById(rootView, id);
      if (citySpinner == null) {
        break missingId;
      }

      id = R.id.cust_loantype;
      EditText custLoantype = ViewBindings.findChildViewById(rootView, id);
      if (custLoantype == null) {
        break missingId;
      }

      id = R.id.cust_name;
      EditText custName = ViewBindings.findChildViewById(rootView, id);
      if (custName == null) {
        break missingId;
      }

      id = R.id.group1CardView;
      CardView group1CardView = ViewBindings.findChildViewById(rootView, id);
      if (group1CardView == null) {
        break missingId;
      }

      id = R.id.group1Layout;
      LinearLayout group1Layout = ViewBindings.findChildViewById(rootView, id);
      if (group1Layout == null) {
        break missingId;
      }

      id = R.id.group2CardView;
      CardView group2CardView = ViewBindings.findChildViewById(rootView, id);
      if (group2CardView == null) {
        break missingId;
      }

      id = R.id.group2Layout;
      LinearLayout group2Layout = ViewBindings.findChildViewById(rootView, id);
      if (group2Layout == null) {
        break missingId;
      }

      id = R.id.group3CardView;
      CardView group3CardView = ViewBindings.findChildViewById(rootView, id);
      if (group3CardView == null) {
        break missingId;
      }

      id = R.id.group3Layout;
      LinearLayout group3Layout = ViewBindings.findChildViewById(rootView, id);
      if (group3Layout == null) {
        break missingId;
      }

      id = R.id.group4CardView;
      CardView group4CardView = ViewBindings.findChildViewById(rootView, id);
      if (group4CardView == null) {
        break missingId;
      }

      id = R.id.group4Layout;
      LinearLayout group4Layout = ViewBindings.findChildViewById(rootView, id);
      if (group4Layout == null) {
        break missingId;
      }

      id = R.id.group5CardView;
      CardView group5CardView = ViewBindings.findChildViewById(rootView, id);
      if (group5CardView == null) {
        break missingId;
      }

      id = R.id.group5Layout;
      LinearLayout group5Layout = ViewBindings.findChildViewById(rootView, id);
      if (group5Layout == null) {
        break missingId;
      }

      id = R.id.group6CardView;
      CardView group6CardView = ViewBindings.findChildViewById(rootView, id);
      if (group6CardView == null) {
        break missingId;
      }

      id = R.id.group6Layout;
      LinearLayout group6Layout = ViewBindings.findChildViewById(rootView, id);
      if (group6Layout == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.institute_name;
      EditText instituteName = ViewBindings.findChildViewById(rootView, id);
      if (instituteName == null) {
        break missingId;
      }

      id = R.id.jurisdiction_edit_text;
      EditText jurisdictionEditText = ViewBindings.findChildViewById(rootView, id);
      if (jurisdictionEditText == null) {
        break missingId;
      }

      id = R.id.landmark;
      EditText landmark = ViewBindings.findChildViewById(rootView, id);
      if (landmark == null) {
        break missingId;
      }

      id = R.id.level_of_maintain;
      TextView levelOfMaintain = ViewBindings.findChildViewById(rootView, id);
      if (levelOfMaintain == null) {
        break missingId;
      }

      id = R.id.levelofmaintain;
      Spinner levelofmaintain = ViewBindings.findChildViewById(rootView, id);
      if (levelofmaintain == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.locality;
      EditText locality = ViewBindings.findChildViewById(rootView, id);
      if (locality == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.prevButton;
      Button prevButton = ViewBindings.findChildViewById(rootView, id);
      if (prevButton == null) {
        break missingId;
      }

      id = R.id.property_address_as_per_site;
      EditText propertyAddressAsPerSite = ViewBindings.findChildViewById(rootView, id);
      if (propertyAddressAsPerSite == null) {
        break missingId;
      }

      id = R.id.site_access;
      Spinner siteAccess = ViewBindings.findChildViewById(rootView, id);
      if (siteAccess == null) {
        break missingId;
      }

      id = R.id.site_visit_Date;
      TextView siteVisitDate = ViewBindings.findChildViewById(rootView, id);
      if (siteVisitDate == null) {
        break missingId;
      }

      id = R.id.statusoccupancy;
      TextView statusoccupancy = ViewBindings.findChildViewById(rootView, id);
      if (statusoccupancy == null) {
        break missingId;
      }

      id = R.id.submit_button;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.widthofroad;
      EditText widthofroad = ViewBindings.findChildViewById(rootView, id);
      if (widthofroad == null) {
        break missingId;
      }

      id = R.id.yes_no_spinner;
      Spinner yesNoSpinner = ViewBindings.findChildViewById(rootView, id);
      if (yesNoSpinner == null) {
        break missingId;
      }

      return new ActivityAddClientBinding((ConstraintLayout) rootView, Address, Addressmatching,
          AgeOfProperty, Amenities, Anynegativetothelocality, Colony, ContactPersonName,
          ContactPersonNumber, East, Jurisdiction, JurisdictionText, NearestBusStop,
          NearestHospital, NearestMetroStation, NearestRailwayStation, NeighborhoodType, North,
          OccupiedBy, OccupiedSince, Relationship, SiteAccesstext, South, Statusofoccupancy, West,
          button, cityLabel, citySpinner, custLoantype, custName, group1CardView, group1Layout,
          group2CardView, group2Layout, group3CardView, group3Layout, group4CardView, group4Layout,
          group5CardView, group5Layout, group6CardView, group6Layout, imageView2, instituteName,
          jurisdictionEditText, landmark, levelOfMaintain, levelofmaintain, linearLayout2, locality,
          nextButton, prevButton, propertyAddressAsPerSite, siteAccess, siteVisitDate,
          statusoccupancy, submitButton, textView1, textView3, textView4, textView5, textView6,
          textview2, widthofroad, yesNoSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
